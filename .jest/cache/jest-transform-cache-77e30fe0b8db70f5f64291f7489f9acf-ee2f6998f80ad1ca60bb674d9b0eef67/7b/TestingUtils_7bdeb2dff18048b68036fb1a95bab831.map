{"version":3,"sources":["TestingUtils.ts"],"names":["setTestID","testId","__DEV__","undefined","findByTestID","wrapper","findWhere","node","prop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAwC;AAAA;AAAA;;AAC7D,MAAIC,OAAJ,EAAa;AAAA;AAAA;AACT,WAAOD,MAAP;AACH,GAFD;AAAA;AAAA;;AAD6D;AAK7D,SAAOE,SAAP;AACH,CANM;;;;;AAcA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CACxBC,OADwB,EAExBJ,MAFwB,EAG0C;AAAA;AAAA;AAC9D,SAAOI,OAAO,CAACC,SAAR,CAAkB,UAACC,IAAD,EAAuE;AAAA;AAAA;AAAA,WAAAA,IAAI,CAACC,IAAL,CAAU,QAAV,MAAwBP,MAAxB;AAA8B,GAAvH,CAAP;AACP,CALM","sourcesContent":["import { ShallowWrapper, ReactWrapper } from 'enzyme';\n\n/**\n * Gets Test ID for component for testing purposes.\n * According to React Native documentation, setting testID can make performance worse,\n * so we can set these ids only in development environment.\n * https://facebook.github.io/react-native/docs/view#testid\n * @param {string} testId  Test id that should be set.\n * @returns {string | undefined}    If is PROD envirenment these id will be undefined.\n */\nexport const setTestID = (testId: string): string | undefined => {\n    if (__DEV__) {\n        return testId;\n    }\n\n    return undefined;\n};\n\n/**\n * Get ReactWrapper or ShallowWrapper that contains found nodes.\n * @param {ShallowWrapper<any, any, any> | ReactWrapper<any, any, any>}  wrapper     Wrapper got by shallow or mount method.\n * @param {string}                                                       testId   Test Id which contains wrapper that we want to find.\n * @returns {ShallowWrapper<any, any, any> | ReactWrapper<any, any, any>} Returns ShallowWrapper (for shallow method) or ReactWrapper (for mount method).\n */\nexport const findByTestID = (\n    wrapper: ShallowWrapper<any, any, any> | ReactWrapper<any, any, any>,\n    testId: string\n    ): ShallowWrapper<any, any, any> | ReactWrapper<any, any, any> => {\n        return wrapper.findWhere((node: ShallowWrapper<any, any, any> | ReactWrapper<any, any, any>) => node.prop('testID') === testId);\n};"]}