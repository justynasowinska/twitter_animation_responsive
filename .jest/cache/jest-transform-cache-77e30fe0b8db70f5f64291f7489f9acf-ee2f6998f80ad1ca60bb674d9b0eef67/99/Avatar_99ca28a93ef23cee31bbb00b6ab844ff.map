{"version":3,"sources":["Avatar.tsx"],"names":["Avatar","props","image","containerStyles","animatedStyles","username","userNameFontSize","styles","imageContainer","headerText","fontSize","StyleSheet","create","borderRadius","borderColor","colors","avatarBorderColor","borderWidth","overflow","flex","width","undefined","height","fontWeight","color","usernameDarkTextColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAUO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAsB;AAAA;;AAAA,oCACuCA,KADvC;AAAA,MAChCC,KADgC,QAChCA,KADgC;AAAA,MACzBC,eADyB,QACzBA,eADyB;AAAA,MACRC,cADQ,QACRA,cADQ;AAAA,MACQC,QADR,QACQA,QADR;AAAA,MACkBC,gBADlB,QACkBA,gBADlB;;AAAA;AAGxC,SACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEH;AAAb,KACE,6BAAC,qBAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACI,MAAM,CAACC,cAAR,EAAwBJ,cAAxB;AAAtB,KACI,6BAAC,kBAAD;AACI,IAAA,MAAM,EAAEF,KADZ;AAEI,IAAA,KAAK,EAAEK,MAAM,CAACL;AAFlB,IADJ,CADF,EAOE,6BAAC,iBAAD,QACA,6BAAC,iBAAD;AACI,IAAA,MAAM,EAAE,6BAAU,gBAAV,CADZ;AAEI,IAAA,KAAK,EAAE,CAACK,MAAM,CAACE,UAAR,EACP;AAAEC,MAAAA,QAAQ,EAAEJ;AAAZ,KADO;AAFX,KAKKD,QALL,CADA,CAPF,CADJ;AAmBH,CAtBM;;;AAwBP,IAAME,MAAM,0BAAGI,wBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,cAAc,EAAE;AACdK,IAAAA,YAAY,EAAE,GADA;AAEdC,IAAAA,WAAW,EAAEC,eAAOC,iBAFN;AAGdC,IAAAA,WAAW,EAAE,CAHC;AAIdC,IAAAA,QAAQ,EAAE;AAJI,GADe;AAO/BhB,EAAAA,KAAK,EAAE;AACLiB,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,KAAK,EAAEC,SAFF;AAGLC,IAAAA,MAAM,EAAED;AAHH,GAPwB;AAY/BZ,EAAAA,UAAU,EAAE;AACVc,IAAAA,UAAU,EAAE,MADF;AAEVC,IAAAA,KAAK,EAAET,eAAOU;AAFJ;AAZmB,CAAlB,CAAH,CAAZ","sourcesContent":["import React from 'react';\nimport { StyleSheet, Image, Animated, View, Text, ViewStyle } from 'react-native';\nimport { colors } from './utils/colors';\nimport { setTestID } from './utils/TestingUtils';\n\ninterface PropsType {\n  image: any;\n  username: string;\n  containerStyles?: ViewStyle;\n  animatedStyles: any;\n  userNameFontSize: number;\n}\n\nexport const Avatar = (props: PropsType) => {\n    const { image, containerStyles, animatedStyles, username, userNameFontSize } = props;\n\n    return (\n        <View style={containerStyles}>\n          <Animated.View style={[styles.imageContainer, animatedStyles]}>\n              <Image\n                  source={image}\n                  style={styles.image}\n              />\n          </Animated.View>\n          <View>\n          <Text\n              testID={setTestID('avatarUserName')}\n              style={[styles.headerText,\n              { fontSize: userNameFontSize }]}\n          >\n              {username}\n          </Text>\n          </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  imageContainer: {\n    borderRadius: 100,\n    borderColor: colors.avatarBorderColor,\n    borderWidth: 3,\n    overflow: 'hidden',\n  },\n  image: {\n    flex: 1,\n    width: undefined,\n    height: undefined,\n  },\n  headerText: {\n    fontWeight: 'bold',\n    color: colors.usernameDarkTextColor\n  },\n});\n"]}