{"version":3,"sources":["MainScreen.tsx"],"names":["MainScreen","Animated","Value","scrollY","ScreenSizeContext","height","mock_username","headerHeight","imageSize","imageMarginTop","headerZIndex","headerTitleBottom","headerFontSize","avatarFontSize","zIndex","bottom","styles","scrollView","event","nativeEvent","contentOffset","y","images","avatarImg","avatarContainer","width","marginTop","StyleSheet","create","flex","marginLeft"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEO,IAAMA,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,qCACZ,qBAAS,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CAAT,CADY;AAAA;AAAA,MACvBC,OADuB;;AAAA,sCAEX,uBAAWC,oCAAX,CAFW;AAAA,MAEtBC,MAFsB,SAEtBA,MAFsB;;AAI9B,MAAMC,aAAa,2BAAG,WAAH,CAAnB;;AAJ8B,sCAY1B,mCAAkBH,OAAlB,EAA2BE,MAA3B,CAZ0B;AAAA,MAO5BE,YAP4B,SAO5BA,YAP4B;AAAA,MAQ5BC,SAR4B,SAQ5BA,SAR4B;AAAA,MAS5BC,cAT4B,SAS5BA,cAT4B;AAAA,MAU5BC,YAV4B,SAU5BA,YAV4B;AAAA,MAW5BC,iBAX4B,SAW5BA,iBAX4B;;AAAA,sCAca,mCAAqBN,MAArB,CAdb;AAAA,MActBO,cAdsB,SActBA,cAdsB;AAAA,MAcNC,cAdM,SAcNA,cAdM;;AAAA;AAgB9B,SACE,4DACE,6BAAC,cAAD;AACI,IAAA,QAAQ,EAAEP,aADd;AAEI,IAAA,oBAAoB,EAAE;AAAED,MAAAA,MAAM,EAAEE,YAAV;AAAwBO,MAAAA,MAAM,EAAEJ;AAAhC,KAF1B;AAGI,IAAA,kBAAkB,EAAE;AAAEK,MAAAA,MAAM,EAAEJ;AAAV,KAHxB;AAII,IAAA,gBAAgB,EAAEC;AAJtB,IADF,EAOE,6BAAC,uBAAD;AACI,IAAA,KAAK,EAAEI,MAAM,CAACC,UADlB;AAEI,IAAA,mBAAmB,EAAE,EAFzB;AAGI,IAAA,QAAQ,EACJhB,sBAASiB,KAAT,CAAe,CACX;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAEC,UAAAA,CAAC,EAAElB;AAAL;AAAjB;AAAf,KADW,CAAf;AAJR,KASI,6BAAC,cAAD;AACI,IAAA,KAAK,EAAEmB,eAAOC,SADlB;AAEI,IAAA,QAAQ,EAAEjB,aAFd;AAGI,IAAA,eAAe,EAAEU,MAAM,CAACQ,eAH5B;AAII,IAAA,gBAAgB,EAAEX,cAJtB;AAKI,IAAA,cAAc,EAAE;AAAEY,MAAAA,KAAK,EAAEjB,SAAT;AAAoBH,MAAAA,MAAM,EAAEG,SAA5B;AAAuCkB,MAAAA,SAAS,EAAEjB;AAAlD;AALpB,IATJ,EAgBI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAAEJ,MAAAA,MAAM,EAAEA,MAAM,GAAG;AAAnB;AAAb,IAhBJ,CAPF,CADF;AA4BD,CA5CM;;;AAmDP,IAAMW,MAAM,2BAAGW,wBAAWC,MAAX,CAAyB;AACtCX,EAAAA,UAAU,EAAE;AACVY,IAAAA,IAAI,EAAE;AADI,GAD0B;AAItCL,EAAAA,eAAe,EAAE;AACbM,IAAAA,UAAU,EAAE;AADC;AAJqB,CAAzB,CAAH,CAAZ","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { StyleSheet, View, ScrollView, Animated, ViewStyle } from 'react-native';\nimport { Header } from './Header';\nimport { Avatar } from './Avatar';\nimport { images } from './utils/images';\nimport { getAnimatedValues } from './animations/Animations';\nimport { ScreenSizeContext } from './context/ScreenSizeContext';\nimport { getHeightForElements } from './animations/helpers';\n\nexport const MainScreen = () => {\n  const [scrollY] = useState(new Animated.Value(0));\n  const { height } = useContext(ScreenSizeContext);\n\n  const mock_username = 'Justyna_S';\n\n  const {\n    headerHeight,\n    imageSize,\n    imageMarginTop,\n    headerZIndex,\n    headerTitleBottom,\n  } = getAnimatedValues(scrollY, height);\n\n  const { headerFontSize, avatarFontSize } = getHeightForElements(height);\n\n  return (\n    <>\n      <Header\n          userName={mock_username}\n          animatedHeaderStyles={{ height: headerHeight, zIndex: headerZIndex }}\n          animatedTextStyles={{ bottom: headerTitleBottom }}\n          userNameFontSize={headerFontSize}\n      />\n      <ScrollView\n          style={styles.scrollView}\n          scrollEventThrottle={16}\n          onScroll={\n              Animated.event([\n                  { nativeEvent: { contentOffset: { y: scrollY } } }\n              ])\n          }\n      >\n          <Avatar\n              image={images.avatarImg}\n              username={mock_username}\n              containerStyles={styles.avatarContainer}\n              userNameFontSize={avatarFontSize}\n              animatedStyles={{ width: imageSize, height: imageSize, marginTop: imageMarginTop }}\n          />\n          <View style={{ height: height * 2 }} />\n      </ScrollView>\n    </>\n  );\n};\n\ninterface Style {\n    scrollView: ViewStyle;\n    avatarContainer: ViewStyle;\n}\n\nconst styles = StyleSheet.create<Style>({\n  scrollView: {\n    flex: 1\n  },\n  avatarContainer: {\n      marginLeft: '3%'\n  }\n});\n"]}