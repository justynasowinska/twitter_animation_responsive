{"version":3,"sources":["Animations.ts"],"names":["getAnimatedHeaderHeight","animatedValue","minHeight","maxHeight","interpolate","inputRange","outputRange","extrapolate","getAnimatedImageSize","outputMinHeight","outputMaxHeight","getAnimatedImagePosition","getAnimatedZIndex","getAnimatedUsernamePosition","avatarFontSize","headerFontSize","avatarTopMargin","avatarHiddenBehindHeader","getAnimatedValues","scrollY","screenHeight","headerMaxHeight","headerMinHeight","imageMinHeight","imageMaxHeight","headerHeight","imageSize","imageMarginTop","headerZIndex","headerTitleBottom"],"mappings":"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","sourcesContent":["import { Animated } from 'react-native';\nimport { getMarginForAndroid, getAvatarTopMargin, getHeightForElements } from './helpers';\n\ninterface AnimatedType {\n    animatedValue: Animated.Value;\n}\n\ninterface AnimatedHeight extends AnimatedType {\n    minHeight: number;\n    maxHeight: number;\n}\n\ninterface AnimatedHeightWithMaxOutput extends AnimatedHeight {\n    outputMaxHeight: number;\n}\n\ninterface AnimatedHeightWithMinOutput extends AnimatedHeight {\n    outputMinHeight: number;\n}\n\ninterface AnimatedWithFontSizes extends AnimatedHeightWithMinOutput {\n    headerFontSize: number;\n    avatarFontSize: number;\n}\n\ntype AnimatedHeightWithOutput = AnimatedHeightWithMaxOutput & AnimatedHeightWithMinOutput;\n\nexport const getAnimatedHeaderHeight = (\n    { animatedValue, minHeight, maxHeight }: AnimatedHeight\n    ): Animated.AnimatedInterpolation => (\n        animatedValue.interpolate({\n            inputRange: [0, maxHeight - minHeight],\n            outputRange: [maxHeight, minHeight],\n            extrapolate: 'clamp'\n        })\n    );\n\nexport const getAnimatedImageSize = (\n    { animatedValue, minHeight, maxHeight, outputMinHeight, outputMaxHeight }: AnimatedHeightWithOutput\n    ): Animated.AnimatedInterpolation => (\n        animatedValue.interpolate({\n            inputRange: [0, maxHeight - minHeight],\n            outputRange: [outputMaxHeight, outputMinHeight],\n            extrapolate: 'clamp'\n          })\n    );\n\nexport const getAnimatedImagePosition = (\n    { animatedValue, minHeight, maxHeight, outputMaxHeight }: AnimatedHeightWithMaxOutput\n    ): Animated.AnimatedInterpolation => (\n        animatedValue.interpolate({\n            inputRange: [0, maxHeight - minHeight],\n            outputRange: [\n                maxHeight - (outputMaxHeight / 2),\n                maxHeight + getAvatarTopMargin(minHeight)\n            ],\n            extrapolate: 'clamp'\n          })\n    );\n\nexport const getAnimatedZIndex = (\n    { animatedValue, minHeight, maxHeight }: AnimatedHeight\n): Animated.AnimatedInterpolation => (\n    animatedValue.interpolate({\n        inputRange: [0, maxHeight - minHeight + getMarginForAndroid()],\n        outputRange: [0, 1],\n        extrapolate: 'clamp'\n    })\n);\n\nexport const getAnimatedUsernamePosition = (\n    { animatedValue, minHeight, maxHeight, outputMinHeight, avatarFontSize, headerFontSize }: AnimatedWithFontSizes\n): Animated.AnimatedInterpolation => {\n    const avatarTopMargin = getAvatarTopMargin(minHeight);\n    const avatarHiddenBehindHeader = maxHeight - minHeight + avatarTopMargin + outputMinHeight;\n\n    return animatedValue.interpolate({\n        inputRange: [\n          0,\n          avatarHiddenBehindHeader,\n          avatarHiddenBehindHeader + (avatarFontSize / 2),\n          avatarHiddenBehindHeader + avatarFontSize\n        ],\n        outputRange: [\n          -avatarFontSize - avatarTopMargin,\n          -avatarFontSize - avatarTopMargin,\n          -headerFontSize / 2 - avatarTopMargin / 2,\n          minHeight / 4 - avatarTopMargin\n        ],\n        extrapolate: 'clamp'\n      });\n};\n\nexport const getAnimatedValues = (scrollY: Animated.Value, screenHeight: number) => {\n    const {\n        headerMaxHeight,\n        headerMinHeight,\n        imageMinHeight,\n        imageMaxHeight,\n        headerFontSize,\n        avatarFontSize\n    } = getHeightForElements(screenHeight);\n\n    const headerHeight = getAnimatedHeaderHeight({\n        animatedValue: scrollY,\n        minHeight: headerMinHeight,\n        maxHeight: headerMaxHeight\n    });\n\n    const imageSize = getAnimatedImageSize({\n        animatedValue: scrollY,\n        minHeight: headerMinHeight,\n        maxHeight: headerMaxHeight,\n        outputMinHeight: imageMinHeight,\n        outputMaxHeight: imageMaxHeight\n    });\n\n    const imageMarginTop = getAnimatedImagePosition({\n        animatedValue: scrollY,\n        minHeight: headerMinHeight,\n        maxHeight: headerMaxHeight,\n        outputMaxHeight: imageMaxHeight\n    });\n\n    const headerZIndex = getAnimatedZIndex({\n        animatedValue: scrollY,\n        minHeight: headerMinHeight,\n        maxHeight: headerMaxHeight\n    });\n\n    const headerTitleBottom = getAnimatedUsernamePosition({\n        animatedValue: scrollY,\n        maxHeight: headerMaxHeight,\n        minHeight: headerMinHeight,\n        outputMinHeight: imageMinHeight,\n        avatarFontSize,\n        headerFontSize\n    });\n\n    return {\n        headerHeight,\n        imageSize,\n        imageMarginTop,\n        headerZIndex,\n        headerTitleBottom\n    };\n};"]}