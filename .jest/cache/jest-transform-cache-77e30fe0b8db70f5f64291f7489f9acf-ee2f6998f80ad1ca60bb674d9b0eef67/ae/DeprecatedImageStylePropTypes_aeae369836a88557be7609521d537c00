fa808aeeccca4a0a436c8a4e04c3a00a
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var DeprecatedColorPropType = require('DeprecatedColorPropType');

var DeprecatedLayoutPropTypes = require('DeprecatedLayoutPropTypes');

var ReactPropTypes = require('prop-types');

var DeprecatedShadowPropTypesIOS = require('DeprecatedShadowPropTypesIOS');

var DeprecatedTransformPropTypes = require('DeprecatedTransformPropTypes');

var ImageStylePropTypes = (0, _objectSpread2.default)({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
  resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
  backgroundColor: DeprecatedColorPropType,
  borderColor: DeprecatedColorPropType,
  borderWidth: ReactPropTypes.number,
  borderRadius: ReactPropTypes.number,
  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
  tintColor: DeprecatedColorPropType,
  opacity: ReactPropTypes.number,
  overlayColor: ReactPropTypes.string,
  borderTopLeftRadius: ReactPropTypes.number,
  borderTopRightRadius: ReactPropTypes.number,
  borderBottomLeftRadius: ReactPropTypes.number,
  borderBottomRightRadius: ReactPropTypes.number
});
module.exports = ImageStylePropTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlcHJlY2F0ZWRJbWFnZVN0eWxlUHJvcFR5cGVzLmpzIl0sIm5hbWVzIjpbIkRlcHJlY2F0ZWRDb2xvclByb3BUeXBlIiwicmVxdWlyZSIsIkRlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMiLCJSZWFjdFByb3BUeXBlcyIsIkRlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MiLCJEZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzIiwiSW1hZ2VTdHlsZVByb3BUeXBlcyIsInJlc2l6ZU1vZGUiLCJvbmVPZiIsImJhY2tmYWNlVmlzaWJpbGl0eSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlckNvbG9yIiwiYm9yZGVyV2lkdGgiLCJudW1iZXIiLCJib3JkZXJSYWRpdXMiLCJvdmVyZmxvdyIsInRpbnRDb2xvciIsIm9wYWNpdHkiLCJvdmVybGF5Q29sb3IiLCJzdHJpbmciLCJib3JkZXJUb3BMZWZ0UmFkaXVzIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiYm9yZGVyQm90dG9tUmlnaHRSYWRpdXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFTQTs7Ozs7O0FBRUEsSUFBTUEsdUJBQXVCLEdBQUdDLE9BQU8sQ0FBQyx5QkFBRCxDQUF2Qzs7QUFDQSxJQUFNQyx5QkFBeUIsR0FBR0QsT0FBTyxDQUFDLDJCQUFELENBQXpDOztBQUNBLElBQU1FLGNBQWMsR0FBR0YsT0FBTyxDQUFDLFlBQUQsQ0FBOUI7O0FBQ0EsSUFBTUcsNEJBQTRCLEdBQUdILE9BQU8sQ0FBQyw4QkFBRCxDQUE1Qzs7QUFDQSxJQUFNSSw0QkFBNEIsR0FBR0osT0FBTyxDQUFDLDhCQUFELENBQTVDOztBQUVBLElBQU1LLG1CQUFtQixtQ0FDcEJKLHlCQURvQixFQUVwQkUsNEJBRm9CLEVBR3BCQyw0QkFIb0I7QUFJdkJFLEVBQUFBLFVBQVUsRUFBRUosY0FBYyxDQUFDSyxLQUFmLENBQXFCLENBQy9CLFFBRCtCLEVBRS9CLFNBRitCLEVBRy9CLE9BSCtCLEVBSS9CLFFBSitCLEVBSy9CLFNBTCtCLENBQXJCLENBSlc7QUFXdkJDLEVBQUFBLGtCQUFrQixFQUFFTixjQUFjLENBQUNLLEtBQWYsQ0FBcUIsQ0FBQyxTQUFELEVBQVksUUFBWixDQUFyQixDQVhHO0FBWXZCRSxFQUFBQSxlQUFlLEVBQUVWLHVCQVpNO0FBYXZCVyxFQUFBQSxXQUFXLEVBQUVYLHVCQWJVO0FBY3ZCWSxFQUFBQSxXQUFXLEVBQUVULGNBQWMsQ0FBQ1UsTUFkTDtBQWV2QkMsRUFBQUEsWUFBWSxFQUFFWCxjQUFjLENBQUNVLE1BZk47QUFnQnZCRSxFQUFBQSxRQUFRLEVBQUVaLGNBQWMsQ0FBQ0ssS0FBZixDQUFxQixDQUFDLFNBQUQsRUFBWSxRQUFaLENBQXJCLENBaEJhO0FBcUJ2QlEsRUFBQUEsU0FBUyxFQUFFaEIsdUJBckJZO0FBc0J2QmlCLEVBQUFBLE9BQU8sRUFBRWQsY0FBYyxDQUFDVSxNQXRCRDtBQXdDdkJLLEVBQUFBLFlBQVksRUFBRWYsY0FBYyxDQUFDZ0IsTUF4Q047QUEyQ3ZCQyxFQUFBQSxtQkFBbUIsRUFBRWpCLGNBQWMsQ0FBQ1UsTUEzQ2I7QUE0Q3ZCUSxFQUFBQSxvQkFBb0IsRUFBRWxCLGNBQWMsQ0FBQ1UsTUE1Q2Q7QUE2Q3ZCUyxFQUFBQSxzQkFBc0IsRUFBRW5CLGNBQWMsQ0FBQ1UsTUE3Q2hCO0FBOEN2QlUsRUFBQUEsdUJBQXVCLEVBQUVwQixjQUFjLENBQUNVO0FBOUNqQixFQUF6QjtBQWlEQVcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkIsbUJBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IERlcHJlY2F0ZWRDb2xvclByb3BUeXBlID0gcmVxdWlyZSgnRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUnKTtcbmNvbnN0IERlcHJlY2F0ZWRMYXlvdXRQcm9wVHlwZXMgPSByZXF1aXJlKCdEZXByZWNhdGVkTGF5b3V0UHJvcFR5cGVzJyk7XG5jb25zdCBSZWFjdFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcbmNvbnN0IERlcHJlY2F0ZWRTaGFkb3dQcm9wVHlwZXNJT1MgPSByZXF1aXJlKCdEZXByZWNhdGVkU2hhZG93UHJvcFR5cGVzSU9TJyk7XG5jb25zdCBEZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzID0gcmVxdWlyZSgnRGVwcmVjYXRlZFRyYW5zZm9ybVByb3BUeXBlcycpO1xuXG5jb25zdCBJbWFnZVN0eWxlUHJvcFR5cGVzID0ge1xuICAuLi5EZXByZWNhdGVkTGF5b3V0UHJvcFR5cGVzLFxuICAuLi5EZXByZWNhdGVkU2hhZG93UHJvcFR5cGVzSU9TLFxuICAuLi5EZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzLFxuICByZXNpemVNb2RlOiBSZWFjdFByb3BUeXBlcy5vbmVPZihbXG4gICAgJ2NlbnRlcicsXG4gICAgJ2NvbnRhaW4nLFxuICAgICdjb3ZlcicsXG4gICAgJ3JlcGVhdCcsXG4gICAgJ3N0cmV0Y2gnLFxuICBdKSxcbiAgYmFja2ZhY2VWaXNpYmlsaXR5OiBSZWFjdFByb3BUeXBlcy5vbmVPZihbJ3Zpc2libGUnLCAnaGlkZGVuJ10pLFxuICBiYWNrZ3JvdW5kQ29sb3I6IERlcHJlY2F0ZWRDb2xvclByb3BUeXBlLFxuICBib3JkZXJDb2xvcjogRGVwcmVjYXRlZENvbG9yUHJvcFR5cGUsXG4gIGJvcmRlcldpZHRoOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlclJhZGl1czogUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICBvdmVyZmxvdzogUmVhY3RQcm9wVHlwZXMub25lT2YoWyd2aXNpYmxlJywgJ2hpZGRlbiddKSxcblxuICAvKipcbiAgICogQ2hhbmdlcyB0aGUgY29sb3Igb2YgYWxsIHRoZSBub24tdHJhbnNwYXJlbnQgcGl4ZWxzIHRvIHRoZSB0aW50Q29sb3IuXG4gICAqL1xuICB0aW50Q29sb3I6IERlcHJlY2F0ZWRDb2xvclByb3BUeXBlLFxuICBvcGFjaXR5OiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIC8qKlxuICAgKiBXaGVuIHRoZSBpbWFnZSBoYXMgcm91bmRlZCBjb3JuZXJzLCBzcGVjaWZ5aW5nIGFuIG92ZXJsYXlDb2xvciB3aWxsXG4gICAqIGNhdXNlIHRoZSByZW1haW5pbmcgc3BhY2UgaW4gdGhlIGNvcm5lcnMgdG8gYmUgZmlsbGVkIHdpdGggYSBzb2xpZCBjb2xvci5cbiAgICogVGhpcyBpcyB1c2VmdWwgaW4gY2FzZXMgd2hpY2ggYXJlIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIEFuZHJvaWRcbiAgICogaW1wbGVtZW50YXRpb24gb2Ygcm91bmRlZCBjb3JuZXJzOlxuICAgKiAgIC0gQ2VydGFpbiByZXNpemUgbW9kZXMsIHN1Y2ggYXMgJ2NvbnRhaW4nXG4gICAqICAgLSBBbmltYXRlZCBHSUZzXG4gICAqXG4gICAqIEEgdHlwaWNhbCB3YXkgdG8gdXNlIHRoaXMgcHJvcCBpcyB3aXRoIGltYWdlcyBkaXNwbGF5ZWQgb24gYSBzb2xpZFxuICAgKiBiYWNrZ3JvdW5kIGFuZCBzZXR0aW5nIHRoZSBgb3ZlcmxheUNvbG9yYCB0byB0aGUgc2FtZSBjb2xvclxuICAgKiBhcyB0aGUgYmFja2dyb3VuZC5cbiAgICpcbiAgICogRm9yIGRldGFpbHMgb2YgaG93IHRoaXMgd29ya3MgdW5kZXIgdGhlIGhvb2QsIHNlZVxuICAgKiBodHRwOi8vZnJlc2NvbGliLm9yZy9kb2NzL3JvdW5kZWQtY29ybmVycy1hbmQtY2lyY2xlcy5odG1sXG4gICAqXG4gICAqIEBwbGF0Zm9ybSBhbmRyb2lkXG4gICAqL1xuICBvdmVybGF5Q29sb3I6IFJlYWN0UHJvcFR5cGVzLnN0cmluZyxcblxuICAvLyBBbmRyb2lkLVNwZWNpZmljIHN0eWxlc1xuICBib3JkZXJUb3BMZWZ0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlclRvcFJpZ2h0UmFkaXVzOiBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbiAgYm9yZGVyQm90dG9tUmlnaHRSYWRpdXM6IFJlYWN0UHJvcFR5cGVzLm51bWJlcixcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW1hZ2VTdHlsZVByb3BUeXBlcztcbiJdfQ==